function cov_s5dqz0rom(){var path="/Users/macepo/TTY/softatestaus/COMP.SE.swtest/src/compact.js";var hash="f3ac9d253ce74b1393b0b1286e2f7343e0281eb9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/macepo/TTY/softatestaus/COMP.SE.swtest/src/compact.js",statementMap:{"0":{start:{line:15,column:17},end:{line:15,column:19}},"1":{start:{line:16,column:17},end:{line:16,column:19}},"2":{start:{line:18,column:2},end:{line:22,column:3}},"3":{start:{line:19,column:4},end:{line:21,column:5}},"4":{start:{line:20,column:6},end:{line:20,column:32}},"5":{start:{line:23,column:2},end:{line:23,column:15}}},fnMap:{"0":{name:"compact",decl:{start:{line:14,column:9},end:{line:14,column:16}},loc:{start:{line:14,column:24},end:{line:24,column:1}},line:14}},branchMap:{"0":{loc:{start:{line:19,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:21,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:19}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f3ac9d253ce74b1393b0b1286e2f7343e0281eb9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_s5dqz0rom=function(){return actualCoverage;};}return actualCoverage;}cov_s5dqz0rom();/**
 * Creates an array with all falsey values removed. The values `false`, `null`,
 * `0`, `""`, `undefined`, and `NaN` are falsey.
 *
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to compact.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * compact([0, 1, false, 2, '', 3])
 * // => [1, 2, 3]
 */function compact(array){cov_s5dqz0rom().f[0]++;let resIndex=(cov_s5dqz0rom().s[0]++,-1);const result=(cov_s5dqz0rom().s[1]++,[]);cov_s5dqz0rom().s[2]++;for(const value of array){cov_s5dqz0rom().s[3]++;if(value){cov_s5dqz0rom().b[0][0]++;cov_s5dqz0rom().s[4]++;result[resIndex++]=value;}else{cov_s5dqz0rom().b[0][1]++;}}cov_s5dqz0rom().s[5]++;return result;}export default compact;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfczVkcXowcm9tIiwiYWN0dWFsQ292ZXJhZ2UiLCJjb21wYWN0IiwiYXJyYXkiLCJmIiwicmVzSW5kZXgiLCJzIiwicmVzdWx0IiwidmFsdWUiLCJiIl0sInNvdXJjZXMiOlsiY29tcGFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgZmFsc2V5IHZhbHVlcyByZW1vdmVkLiBUaGUgdmFsdWVzIGBmYWxzZWAsIGBudWxsYCxcbiAqIGAwYCwgYFwiXCJgLCBgdW5kZWZpbmVkYCwgYW5kIGBOYU5gIGFyZSBmYWxzZXkuXG4gKlxuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgQXJyYXlcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjb21wYWN0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgYXJyYXkgb2YgZmlsdGVyZWQgdmFsdWVzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBjb21wYWN0KFswLCAxLCBmYWxzZSwgMiwgJycsIDNdKVxuICogLy8gPT4gWzEsIDIsIDNdXG4gKi9cbmZ1bmN0aW9uIGNvbXBhY3QoYXJyYXkpIHtcbiAgbGV0IHJlc0luZGV4ID0gLTFcbiAgY29uc3QgcmVzdWx0ID0gW11cblxuICBmb3IgKGNvbnN0IHZhbHVlIG9mIGFycmF5KSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICByZXN1bHRbcmVzSW5kZXgrK10gPSB2YWx1ZVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBhY3RcbiJdLCJtYXBwaW5ncyI6InUwQ0FlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUUsT0FBT0EsQ0FBQ0MsS0FBSyxDQUFFLENBQUFILGFBQUEsR0FBQUksQ0FBQSxNQUN0QixHQUFJLENBQUFDLFFBQVEsRUFBQUwsYUFBQSxHQUFBTSxDQUFBLE1BQUcsQ0FBQyxDQUFDLEVBQ2pCLEtBQU0sQ0FBQUMsTUFBTSxFQUFBUCxhQUFBLEdBQUFNLENBQUEsTUFBRyxFQUFFLEVBQUFOLGFBQUEsR0FBQU0sQ0FBQSxNQUVqQixJQUFLLEtBQU0sQ0FBQUUsS0FBSyxHQUFJLENBQUFMLEtBQUssQ0FBRSxDQUFBSCxhQUFBLEdBQUFNLENBQUEsTUFDekIsR0FBSUUsS0FBSyxDQUFFLENBQUFSLGFBQUEsR0FBQVMsQ0FBQSxTQUFBVCxhQUFBLEdBQUFNLENBQUEsTUFDVEMsTUFBTSxDQUFDRixRQUFRLEVBQUUsQ0FBQyxDQUFHRyxLQUFLLENBQzVCLENBQUMsS0FBQVIsYUFBQSxHQUFBUyxDQUFBLFVBQ0gsQ0FBQ1QsYUFBQSxHQUFBTSxDQUFBLE1BQ0QsTUFBTyxDQUFBQyxNQUFNLENBQ2YsQ0FFQSxjQUFlLENBQUFMLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=