function cov_v49zx036h(){var path="/Users/macepo/TTY/softatestaus/COMP.SE.swtest/src/chunk.js";var hash="a9a234afcafa403cb3293af4128dae013c574aed";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/macepo/TTY/softatestaus/COMP.SE.swtest/src/chunk.js",statementMap:{"0":{start:{line:23,column:2},end:{line:23,column:37}},"1":{start:{line:24,column:17},end:{line:24,column:49}},"2":{start:{line:25,column:2},end:{line:27,column:3}},"3":{start:{line:26,column:4},end:{line:26,column:13}},"4":{start:{line:28,column:14},end:{line:28,column:15}},"5":{start:{line:29,column:17},end:{line:29,column:18}},"6":{start:{line:30,column:17},end:{line:30,column:52}},"7":{start:{line:32,column:2},end:{line:34,column:3}},"8":{start:{line:33,column:4},end:{line:33,column:59}},"9":{start:{line:35,column:2},end:{line:35,column:15}}},fnMap:{"0":{name:"chunk",decl:{start:{line:22,column:9},end:{line:22,column:14}},loc:{start:{line:22,column:32},end:{line:36,column:1}},line:22}},branchMap:{"0":{loc:{start:{line:22,column:22},end:{line:22,column:30}},type:"default-arg",locations:[{start:{line:22,column:29},end:{line:22,column:30}}],line:22},"1":{loc:{start:{line:24,column:17},end:{line:24,column:49}},type:"cond-expr",locations:[{start:{line:24,column:33},end:{line:24,column:34}},{start:{line:24,column:37},end:{line:24,column:49}}],line:24},"2":{loc:{start:{line:25,column:2},end:{line:27,column:3}},type:"if",locations:[{start:{line:25,column:2},end:{line:27,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:25},"3":{loc:{start:{line:25,column:6},end:{line:25,column:25}},type:"binary-expr",locations:[{start:{line:25,column:6},end:{line:25,column:13}},{start:{line:25,column:17},end:{line:25,column:25}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a9a234afcafa403cb3293af4128dae013c574aed"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_v49zx036h=function(){return actualCoverage;};}return actualCoverage;}cov_v49zx036h();import slice from'./slice.js';import toInteger from'./toInteger.js';/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * chunk(['a', 'b', 'c', 'd'], 2)
 * // => [['a', 'b'], ['c', 'd']]
 *
 * chunk(['a', 'b', 'c', 'd'], 3)
 * // => [['a', 'b', 'c'], ['d']]
 */function chunk(array,size=(cov_v49zx036h().b[0][0]++,1)){cov_v49zx036h().f[0]++;cov_v49zx036h().s[0]++;size=Math.max(toInteger(size),0);const length=(cov_v49zx036h().s[1]++,array==null?(cov_v49zx036h().b[1][0]++,0):(cov_v49zx036h().b[1][1]++,array.length));cov_v49zx036h().s[2]++;if((cov_v49zx036h().b[3][0]++,!length)||(cov_v49zx036h().b[3][1]++,size<1)){cov_v49zx036h().b[2][0]++;cov_v49zx036h().s[3]++;return[];}else{cov_v49zx036h().b[2][1]++;}let index=(cov_v49zx036h().s[4]++,0);let resIndex=(cov_v49zx036h().s[5]++,0);const result=(cov_v49zx036h().s[6]++,new Array(Math.ceil(length/size)));cov_v49zx036h().s[7]++;while(index<length){cov_v49zx036h().s[8]++;result[resIndex]=slice(array,index,index+=size);}cov_v49zx036h().s[9]++;return result;}export default chunk;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdjQ5engwMzZoIiwiYWN0dWFsQ292ZXJhZ2UiLCJzbGljZSIsInRvSW50ZWdlciIsImNodW5rIiwiYXJyYXkiLCJzaXplIiwiYiIsImYiLCJzIiwiTWF0aCIsIm1heCIsImxlbmd0aCIsImluZGV4IiwicmVzSW5kZXgiLCJyZXN1bHQiLCJBcnJheSIsImNlaWwiXSwic291cmNlcyI6WyJjaHVuay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2xpY2UgZnJvbSAnLi9zbGljZS5qcydcbmltcG9ydCB0b0ludGVnZXIgZnJvbSAnLi90b0ludGVnZXIuanMnXG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBlbGVtZW50cyBzcGxpdCBpbnRvIGdyb3VwcyB0aGUgbGVuZ3RoIG9mIGBzaXplYC5cbiAqIElmIGBhcnJheWAgY2FuJ3QgYmUgc3BsaXQgZXZlbmx5LCB0aGUgZmluYWwgY2h1bmsgd2lsbCBiZSB0aGUgcmVtYWluaW5nXG4gKiBlbGVtZW50cy5cbiAqXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHByb2Nlc3MuXG4gKiBAcGFyYW0ge251bWJlcn0gW3NpemU9MV0gVGhlIGxlbmd0aCBvZiBlYWNoIGNodW5rXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBhcnJheSBvZiBjaHVua3MuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGNodW5rKFsnYScsICdiJywgJ2MnLCAnZCddLCAyKVxuICogLy8gPT4gW1snYScsICdiJ10sIFsnYycsICdkJ11dXG4gKlxuICogY2h1bmsoWydhJywgJ2InLCAnYycsICdkJ10sIDMpXG4gKiAvLyA9PiBbWydhJywgJ2InLCAnYyddLCBbJ2QnXV1cbiAqL1xuZnVuY3Rpb24gY2h1bmsoYXJyYXksIHNpemUgPSAxKSB7XG4gIHNpemUgPSBNYXRoLm1heCh0b0ludGVnZXIoc2l6ZSksIDApXG4gIGNvbnN0IGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoXG4gIGlmICghbGVuZ3RoIHx8IHNpemUgPCAxKSB7XG4gICAgcmV0dXJuIFtdXG4gIH1cbiAgbGV0IGluZGV4ID0gMFxuICBsZXQgcmVzSW5kZXggPSAwXG4gIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheShNYXRoLmNlaWwobGVuZ3RoIC8gc2l6ZSkpXG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0W3Jlc0luZGV4XSA9IHNsaWNlKGFycmF5LCBpbmRleCwgKGluZGV4ICs9IHNpemUpKVxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2h1bmtcbiJdLCJtYXBwaW5ncyI6ImtvRUFlWTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FmWixNQUFPLENBQUFFLEtBQUssS0FBTSxZQUFZLENBQzlCLE1BQU8sQ0FBQUMsU0FBUyxLQUFNLGdCQUFnQixDQUV0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxRQUFTLENBQUFDLEtBQUtBLENBQUNDLEtBQUssQ0FBRUMsSUFBSSxFQUFBTixhQUFBLEdBQUFPLENBQUEsU0FBRyxDQUFDLEVBQUUsQ0FBQVAsYUFBQSxHQUFBUSxDQUFBLE1BQUFSLGFBQUEsR0FBQVMsQ0FBQSxNQUM5QkgsSUFBSSxDQUFHSSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1IsU0FBUyxDQUFDRyxJQUFJLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FDbkMsS0FBTSxDQUFBTSxNQUFNLEVBQUFaLGFBQUEsR0FBQVMsQ0FBQSxNQUFHSixLQUFLLEVBQUksSUFBSSxFQUFBTCxhQUFBLEdBQUFPLENBQUEsU0FBRyxDQUFDLEdBQUFQLGFBQUEsR0FBQU8sQ0FBQSxTQUFHRixLQUFLLENBQUNPLE1BQU0sR0FBQVosYUFBQSxHQUFBUyxDQUFBLE1BQy9DLEdBQUksQ0FBQVQsYUFBQSxHQUFBTyxDQUFBLFVBQUNLLE1BQU0sSUFBQVosYUFBQSxHQUFBTyxDQUFBLFNBQUlELElBQUksQ0FBRyxDQUFDLEVBQUUsQ0FBQU4sYUFBQSxHQUFBTyxDQUFBLFNBQUFQLGFBQUEsR0FBQVMsQ0FBQSxNQUN2QixNQUFPLEVBQUUsQ0FDWCxDQUFDLEtBQUFULGFBQUEsR0FBQU8sQ0FBQSxVQUNELEdBQUksQ0FBQU0sS0FBSyxFQUFBYixhQUFBLEdBQUFTLENBQUEsTUFBRyxDQUFDLEVBQ2IsR0FBSSxDQUFBSyxRQUFRLEVBQUFkLGFBQUEsR0FBQVMsQ0FBQSxNQUFHLENBQUMsRUFDaEIsS0FBTSxDQUFBTSxNQUFNLEVBQUFmLGFBQUEsR0FBQVMsQ0FBQSxNQUFHLEdBQUksQ0FBQU8sS0FBSyxDQUFDTixJQUFJLENBQUNPLElBQUksQ0FBQ0wsTUFBTSxDQUFHTixJQUFJLENBQUMsQ0FBQyxFQUFBTixhQUFBLEdBQUFTLENBQUEsTUFFbEQsTUFBT0ksS0FBSyxDQUFHRCxNQUFNLENBQUUsQ0FBQVosYUFBQSxHQUFBUyxDQUFBLE1BQ3JCTSxNQUFNLENBQUNELFFBQVEsQ0FBQyxDQUFHWixLQUFLLENBQUNHLEtBQUssQ0FBRVEsS0FBSyxDQUFHQSxLQUFLLEVBQUlQLElBQUssQ0FBQyxDQUN6RCxDQUFDTixhQUFBLEdBQUFTLENBQUEsTUFDRCxNQUFPLENBQUFNLE1BQU0sQ0FDZixDQUVBLGNBQWUsQ0FBQVgsS0FBSyIsImlnbm9yZUxpc3QiOltdfQ==